name: Release

on:
  push:
    tags:
      - 'v\d+.\d+.\d+'

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          # Windows
          - goos: windows
            goarch: amd64
            ext: .exe
            name: windows-amd64
          - goos: windows
            goarch: arm64
            ext: .exe
            name: windows-arm64
          # Linux
          - goos: linux
            goarch: amd64
            ext: ""
            name: linux-amd64
          - goos: linux
            goarch: arm64
            ext: ""
            name: linux-arm64
          - goos: linux
            goarch: 386
            ext: ""
            name: linux-386
          # macOS
          - goos: darwin
            goarch: amd64
            ext: ""
            name: macos-amd64
          - goos: darwin
            goarch: arm64
            ext: ""
            name: macos-arm64
          # FreeBSD
          - goos: freebsd
            goarch: amd64
            ext: ""
            name: freebsd-amd64
          - goos: freebsd
            goarch: arm64
            ext: ""
            name: freebsd-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.22'

      - name: Get dependencies
        run: go mod download

#      - name: Run tests
#        run: go test -v ./...

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          mkdir -p dist
          ARCH_NAME="project2md-${{ matrix.name }}"
          BINARY_NAME="project2md${{ matrix.ext }}"
          go build -ldflags="-s -w -X main.Version=${{ github.ref_name }}" -o "dist/${BINARY_NAME}" .
          
          # Create archive
          cd dist
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip "${ARCH_NAME}.zip" "${BINARY_NAME}"
            echo "ASSET_NAME=${ARCH_NAME}.zip" >> $GITHUB_ENV
          else
            tar -czf "${ARCH_NAME}.tar.gz" "${BINARY_NAME}"
            echo "ASSET_NAME=${ARCH_NAME}.tar.gz" >> $GITHUB_ENV
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v5
        with:
          name: ${{ matrix.name }}
          path: dist/${{ env.ASSET_NAME }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Download all artifacts
        uses: actions/download-artifact@v6
        with:
          path: artifacts

      - name: Create checksums
        run: |
          cd artifacts
          find . -type f \( -name "*.zip" -o -name "*.tar.gz" \) -exec sha256sum {} \; > ../checksums.txt

      - name: Generate release notes
        id: release_notes
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "Creating release notes for $TAG_NAME"
          
          cat > release_notes.md << EOF
          # Project2MD $TAG_NAME
          
          ## ðŸ“¦ Installation
          
          Download the appropriate binary for your platform from the assets below.
          
          ### Quick Install (Linux/macOS)
          \`\`\`bash
          # Download and install (replace with your platform)
          curl -L https://github.com/${{ github.repository }}/releases/download/$TAG_NAME/project2md-linux-amd64.tar.gz | tar -xz
          chmod +x project2md
          sudo mv project2md /usr/local/bin/project2md
          \`\`\`
          
          ### Windows
          Download the \`.zip\` file, extract it, and add the executable to your PATH.
          
          ## ðŸš€ Usage
          
          \`\`\`bash
          # Basic usage
          project2md /path/to/your/project
          
          # With options
          project2md -verbose -stat -output archive.md /path/to/project
          \`\`\`
          
          ## ðŸ“‹ Supported Platforms
          
          - **Windows**: x64, ARM64
          - **Linux**: x64, ARM64, x86
          - **macOS**: Intel (x64), Apple Silicon (ARM64)
          - **FreeBSD**: x64, ARM64
          
          ## âœ… Checksums
          
          All binaries are provided with SHA256 checksums for verification.
          
          ## ðŸ”— Links
          
          - [Documentation](https://github.com/${{ github.repository }}#readme)
          - [Configuration Guide](https://github.com/${{ github.repository }}#configuration)
          - [Report Issues](https://github.com/${{ github.repository }}/issues)
          EOF
          
          echo "RELEASE_NOTES_FILE=release_notes.md" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Project2MD ${{ github.ref_name }}
          body_path: ${{ env.RELEASE_NOTES_FILE }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
          files: |
            artifacts/**/*.zip
            artifacts/**/*.tar.gz
            checksums.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update latest release info
        if: ${{ !contains(github.ref_name, '-') }}
        run: |
          echo "âœ… Release ${{ github.ref_name }} published successfully!"
          echo "ðŸ”— Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
          echo "ðŸ“¦ Assets uploaded: $(find artifacts -type f | wc -l)"
